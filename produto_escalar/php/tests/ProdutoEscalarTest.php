<?php

require_once dirname(__FILE__) . '/../ProdutoEscalar.php';

/**
 * Test class for ProdutoEscalar.
 * Generated by PHPUnit on 2012-07-27 at 10:25:21.
 */
class ProdutoEscalarTest extends PHPUnit_Framework_TestCase {

  /**
   * @var ProdutoEscalar
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->object = new ProdutoEscalar;
  }
  
  public function dataProviderTestAngulos() {
    return array(
      array(2, 'agudo'),
      array(4, 'agudo'),
      array(20, 'agudo'),
      array(0, 'reto'),
      array(-1, 'obtuso'),
      array(-15, 'obtuso'),
      array(-23, 'obtuso'),
    );
  }
  
  /**
   * @dataProvider dataProviderTestAngulos
   */
  public function testAngulos($product, $angulo) {
    $this->assertEquals($angulo, $this->object->get_angle($product));
  }
  
  public function dataProviderAgudo() {
    return array(
      array(array(1, 'agudo'), array(1), array(1)),
      array(array(5, 'agudo'), array(2, 3), array(4, -1)),
      array(array(7, 'agudo'), array(2, 2, 3), array(1, 1, 1)),
    );
  }
  
  /**
   * @dataProvider dataProviderAgudo
   */
  public function testListasAgudo($result, $a, $b) {
    $this->assertEquals($result, $this->object->calculate($a, $b));
  }
  
  public function dataProviderObtuso() {
    return array(
      array(array(-1, 'obtuso'), array(-1), array(1)),
      array(array(-5, 'obtuso'), array(2, 3), array(-4, 1)),
      array(array(-3, 'obtuso'), array(2, 2, 3), array(-1, 1, -1)),
    );
  }
  
  /**
   * @dataProvider dataProviderObtuso
   */
  public function testListasObtuso($result, $a, $b) {
    $this->assertEquals($result, $this->object->calculate($a, $b));
  }
  
  public function dataProviderReto() {
    return array(
      array(array(0, 'reto'), array(0), array(1)),
      array(array(0, 'reto'), array(0, 3), array(-4, 0)),
      array(array(0, 'reto'), array(2, 0, 3), array(0, 1, 0)),
    );
  }
  
  /**
   * @dataProvider dataProviderObtuso
   */
  public function testListasReto($result, $a, $b) {
    $this->assertEquals($result, $this->object->calculate($a, $b));
  }
  
  /**
   * @expectedException InvalidArgumentException
   * @expectedExceptionMessage Wrong Arguments, size of arrays needs to be the same
   */
  public function testListasTamanhoDiferente() {
    $a = array(2, 3, 4);
    $b = array(4, -1);
    $this->object->calculate($a, $b);
  }
  
  /**
   * @expectedException InvalidArgumentException 
   * @expectedExceptionMessage Wrong Arguments, needs to be arrays
   */
  public function testListasInvalidas() {
    $a = 'a';
    $b = 'b';
    $this->object->calculate($a, $b);
  }
  
  /**
   * @expectedException InvalidArgumentException 
   * @expectedExceptionMessage Wrong Arguments, size of array needs to be more than one
   */
  public function testListasVazias() {
    $a = array();
    $b = array();
    $this->object->calculate($a, $b);
  }

}

?>
